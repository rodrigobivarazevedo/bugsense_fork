services:
  backend:
    build:
      context: ./core_api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=core_api.settings
      - DATABASE_URL=postgres://bugsenseadmin:bugsenseadmin@db:5432/bugsense
      - ALLOWED_HOSTS=*
      - HOST_IP=${HOST_IP}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - ML_API_KEY=${ML_API_KEY}
    depends_on:
      - db
    volumes:
      - ./core_api:/app
      - ./core_api/static:/app/static
      - ./core_api/static:/app/core_api/static
      - ./setup:/app/setup
    networks:
      - app_network

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://${HOST_IP}:8000/api/
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - HOST_IP=${HOST_IP}
      - REACT_APP_API_URL=http://${HOST_IP}:8000/api/
    volumes:
      - ./web:/app
      - /app/node_modules
      - ./setup:/app/setup
    depends_on:
      - backend
    networks:
      - app_network
    command: sh /app/setup/start-web.sh

  mobile:
    build:
      context: ./mobile
      dockerfile: Dockerfile
      args:
        - API_URL=http://${HOST_IP}:8000/api/
    ports:
      - "19000:19000"
      - "19001:19001"
      - "19002:19002"
      - "8081:8081"
    environment:
      - NODE_ENV=development
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - REACT_NATIVE_PACKAGER_HOSTNAME=${HOST_IP}
      - HOST_IP=${HOST_IP}
      - API_URL=http://${HOST_IP}:8000/api/
    volumes:
      - ./mobile:/app
      - /app/node_modules
      - ./setup:/app/setup
    depends_on:
      - backend
    networks:
      - app_network
    command: sh /app/setup/start-mobile.sh

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./setup:/app/setup
    environment:
      - POSTGRES_DB=bugsense
      - POSTGRES_USER=bugsenseadmin
      - POSTGRES_PASSWORD=bugsenseadmin
    ports:
      - "5432:5432"
    networks:
      - app_network
    
  ml_service:
    build: ./ai-api
    restart: always
    command: uvicorn app.main:app --host 0.0.0.0 --port 5001 --reload
    volumes:
      - ./ai-api:/app
      - ./dump:/app/dump 
    ports:
      - "5001:5001"
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
